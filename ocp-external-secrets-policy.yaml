---
apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-app.yaml
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: external-secrets
  namespace: external-secrets
spec: {}
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-deployable-ns.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-deployable
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-helm-appsub.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: Subscription
metadata:
  annotations:
    apps.open-cluster-management.io/reconcile-option: replace
  name: external-secrets-helm
  namespace: external-secrets
spec:
  channel: external-secrets-helm-channel/external-secrets-helm
  # Chart name
  package: kubernetes-external-secrets
  packageFilter:
    # Chart version
    version: "0.3.10"
  packageOverrides:
  - packageName: kubernetes-external-secrets
    # Chart release name
    packageAlias: external-secrets
    packageOverrides:
    # Release values
    - path: spec
      value:
        env:
          LOG_LEVEL: debug
          # REPLACE this URL with a correct HashiCorp Vault URL
          #VAULT_ADDR: {{ .Values.vault_addr }}
          VAULT_ADDR: https://localahost:8200
          DEFAULT_VAULT_MOUNT_POINT: kubernetes
          # This role must exist in Vault. This role must grant access to secret data
          # See also https://www.vaultproject.io/docs/auth/kubernetes
          DEFAULT_VAULT_ROLE: external-secrets
          CUSTOM_KUBERNETES_TOKEN_PATH: /mnt/token
        filesFromSecret:
          token:
            mountPath: /mnt
            secret: custom-kubernetes-token
        serviceMonitor:
          enabled: true
          namespace: external-secrets
  placement:
    placementRef:
      name: external-secrets
      kind: PlacementRule
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-helm-channel-ns.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-helm-channel
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-helm-channel.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: Channel
metadata:
  name: external-secrets-helm
  namespace: external-secrets-helm-channel
spec:
  type: HelmRepo
  pathname: https://charts.external-secrets.io
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-ns-appsub.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: Subscription
metadata:
  annotations:
    apps.open-cluster-management.io/reconcile-option: replace
  name: external-secrets-ns
  namespace: external-secrets
spec:
  channel: external-secrets-ns-channel/external-secrets-ns
  placement:
    placementRef:
      name: external-secrets
      kind: PlacementRule
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-ns-channel-ns.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets-ns-channel
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-ns-channel.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: Channel
metadata:
  name: external-secrets-ns
  namespace: external-secrets-ns-channel
spec:
  type: Namespace
  pathname: external-secrets-deployable
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-ns.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets
---
# multicluster-management-rhacm-argocd/bootstrap/external-secrets/external-secrets-placementrule.yaml
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: external-secrets
  namespace: external-secrets
spec:
  clusterConditions:
  - type: ManagedClusterConditionAvailable
    status: "True"
